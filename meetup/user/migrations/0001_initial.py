# Generated by Django 2.0.5 on 2018-05-11 17:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.IntegerField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=50)),
                ('shortname', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.IntegerField()),
                ('city_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=50)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('event_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
                ('description', models.TextField(blank=True, null=True)),
                ('duration', models.IntegerField()),
                ('fee_accepts', models.TextField()),
                ('fee_amount', models.FloatField(blank=True, null=True)),
                ('fee_required', models.BooleanField()),
                ('headcount', models.IntegerField(blank=True, null=True)),
                ('how_to_find_us', models.TextField(blank=True, null=True)),
                ('maybe_rsvp_count', models.IntegerField()),
                ('event_name', models.CharField(max_length=100)),
                ('photo_url', models.TextField(blank=True, null=True)),
                ('rating_average', models.FloatField(blank=True, null=True)),
                ('rating_count', models.IntegerField()),
                ('rsvp_limit', models.IntegerField()),
                ('event_status', models.TextField()),
                ('event_time', models.DateTimeField()),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('repinned', models.NullBooleanField()),
                ('visibility', models.TextField()),
                ('waitlist_count', models.IntegerField()),
                ('why', models.TextField(blank=True, null=True)),
                ('yes_rsvp_count', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('group_id', models.IntegerField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
                ('description', models.TextField(null=True)),
                ('photo_photo_link', models.CharField(blank=True, max_length=200, null=True)),
                ('join_mode', models.TextField()),
                ('group_name', models.CharField(blank=True, max_length=100, null=True)),
                ('organizer_id', models.IntegerField(blank=True, null=True)),
                ('visibility', models.TextField()),
                ('who', models.CharField(blank=True, max_length=50, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Category')),
                ('city_name', models.ForeignKey(blank=True, db_column='city_name', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.City')),
            ],
        ),
        migrations.CreateModel(
            name='GroupTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Groups')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_id', models.IntegerField()),
                ('bio', models.TextField()),
                ('city_name', models.CharField(blank=True, max_length=50, null=True)),
                ('joined', models.DateTimeField()),
                ('member_name', models.CharField(max_length=50)),
                ('member_status', models.TextField()),
                ('visited', models.DateTimeField()),
                ('group_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModeratorCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Category')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Member')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('topic_id', models.IntegerField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('urlkey', models.CharField(max_length=50)),
                ('topic_name', models.CharField(max_length=50)),
                ('parent_topic_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TopicFollowed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Member')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Topic')),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('venue_id', models.IntegerField(primary_key=True, serialize=False)),
                ('address_1', models.CharField(blank=True, max_length=200, null=True)),
                ('city_name', models.CharField(blank=True, max_length=50, null=True)),
                ('venue_name', models.CharField(blank=True, max_length=200, null=True)),
                ('rating_average', models.FloatField()),
                ('rating_count', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Websitemanager',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=50)),
                ('joined', models.DateTimeField()),
                ('manager_type', models.TextField()),
            ],
        ),
        migrations.AddField(
            model_name='grouptopic',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Topic'),
        ),
        migrations.AddField(
            model_name='events',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Groups'),
        ),
        migrations.AddField(
            model_name='events',
            name='venue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Venue'),
        ),
    ]
